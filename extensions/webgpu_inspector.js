!function(){async function e(e,t='application/octet-stream'){return await new Promise(((r,o)=>{const s=Object.assign(new FileReader,{onload:()=>r(s.result),onerror:()=>o(s.error)});s.readAsDataURL(new File([e],'',{type:t}))}))}class t{constructor(e){this._lastSlotId=0,this.slots=new Map,e&&(this.name=e)}static get enabled(){return 0==t._disableSignals}static get disabled(){return t._disableSignals>0}static disable(){return t._disableSignals++}static enable(e){return e?(t._disableSignals=0,0):t._disableSignals>0?t._disableSignals--:0}static disconnect(e,r,o){for(const s in e){const i=e[s];i.constructor===t&&i.disconnect(r,o)}}static getSignals(e,r){r=r||[];for(const o in e){const s=e[o];s.constructor===t&&r.push(s)}return r}get hasListeners(){return this.slots.size>0}emit(){if(!t.disabled)for(const e of this.slots){const r=e[1][0],o=e[1][1]||r;r&&(r.constructor===t?r.emit.apply(o,arguments):r.apply(o,arguments))}}addListener(e,t){return this.isListening(e,t)?null:(this.slots.set(this._lastSlotId++,[e,t]),this._lastSlotId-1)}isListening(e,t){for(const r of this.slots){const o=r[1];if(e&&!t){if(o[0]===e||o[1]===e)return!0}else if(!e&&t){if(o[1]===t)return!0}else if(o[0]===e&&o[1]===t)return!0}return!1}disconnect(e,t){if(null==e&&null==t)return this.slots.clear(),!0;if(e.constructor===Number){const t=e;return!!this.slots.has(t)&&(this.slots.delete(t),!0)}let r=!1;for(const o of this.slots){const s=o[0],i=o[1];e&&!t?i[0]!==e&&i[1]!==e||(this.slots.delete(s),r=!0):!e&&t?i[1]===t&&(this.slots.delete(s),r=!0):i[0]===e&&i[1]===t&&(this.slots.delete(s),r=!0)}return r}}function r(){if(!Error.captureStackTrace)return'';const e={};if(Error.captureStackTrace(e,r),!e.stack)return'';return e.stack.split('\n').map((e=>e.split('at ')[1])).slice(2).filter((e=>e&&!e.includes('webgpu_inspector.js'))).join('\n')}t._disableSignals=0;const o=new Set([GPUAdapter,GPUDevice,GPUBuffer,GPUTexture,GPUTextureView,GPUExternalTexture,GPUSampler,GPUBindGroupLayout,GPUBindGroup,GPUPipelineLayout,GPUShaderModule,GPUComputePipeline,GPURenderPipeline,GPUCommandBuffer,GPUCommandEncoder,GPUComputePassEncoder,GPURenderPassEncoder,GPURenderBundle,GPUQueue,GPUQuerySet,GPUCanvasContext]),s=new Set(['createBuffer','createTexture','createSampler','importExternalTexture','createBindGroupLayout','createPipelineLayout','createBindGroup','createShaderModule','createComputePipeline','createRenderPipeline','createComputePipelineAsync','createRenderPipelineAsync','createCommandEncoder','createRenderBundleEncoder','createQuerySet','createView']);class i{constructor(e){this._idGenerator=e,this.onPreCall=new t,this.onPostCall=new t,this.onPromise=new t,this.onPromiseResolve=new t,this.recordStacktraces=!1,this._wrapGPUTypes()}_wrapGPUTypes(){GPU.prototype.requestAdapter=this._wrapMethod('requestAdapter',GPU.prototype.requestAdapter),GPU.prototype.getPreferredFormat=this._wrapMethod('getPreferredFormat',GPU.prototype.getPreferredFormat),GPUAdapter.prototype.requestDevice=this._wrapMethod('requestDevice',GPUAdapter.prototype.requestDevice),GPUDevice.prototype.destroy=this._wrapMethod('destroy',GPUDevice.prototype.destroy),GPUDevice.prototype.createBuffer=this._wrapMethod('createBuffer',GPUDevice.prototype.createBuffer),GPUDevice.prototype.createTexture=this._wrapMethod('createTexture',GPUDevice.prototype.createTexture),GPUDevice.prototype.createSampler=this._wrapMethod('createSampler',GPUDevice.prototype.createSampler),GPUDevice.prototype.importExternalTexture=this._wrapMethod('importExternalTexture',GPUDevice.prototype.importExternalTexture),GPUDevice.prototype.createBindGroupLayout=this._wrapMethod('createBindGroupLayout',GPUDevice.prototype.createBindGroupLayout),GPUDevice.prototype.createPipelineLayout=this._wrapMethod('createPipelineLayout',GPUDevice.prototype.createPipelineLayout),GPUDevice.prototype.createBindGroup=this._wrapMethod('createBindGroup',GPUDevice.prototype.createBindGroup),GPUDevice.prototype.createShaderModule=this._wrapMethod('createShaderModule',GPUDevice.prototype.createShaderModule),GPUDevice.prototype.createComputePipeline=this._wrapMethod('createComputePipeline',GPUDevice.prototype.createComputePipeline),GPUDevice.prototype.createRenderPipeline=this._wrapMethod('createRenderPipeline',GPUDevice.prototype.createRenderPipeline),GPUDevice.prototype.createComputePipelineAsync=this._wrapMethod('createComputePipelineAsync',GPUDevice.prototype.createComputePipelineAsync),GPUDevice.prototype.createRenderPipelineAsync=this._wrapMethod('createRenderPipelineAsync',GPUDevice.prototype.createRenderPipelineAsync),GPUDevice.prototype.createCommandEncoder=this._wrapMethod('createCommandEncoder',GPUDevice.prototype.createCommandEncoder),GPUDevice.prototype.createRenderBundleEncoder=this._wrapMethod('createRenderBundleEncoder',GPUDevice.prototype.createRenderBundleEncoder),GPUDevice.prototype.createQuerySet=this._wrapMethod('createQuerySet',GPUDevice.prototype.createQuerySet),GPUBuffer.prototype.mapAsync=this._wrapMethod('mapAsync',GPUBuffer.prototype.mapAsync),GPUBuffer.prototype.getMappedRange=this._wrapMethod('getMappedRange',GPUBuffer.prototype.getMappedRange),GPUBuffer.prototype.unmap=this._wrapMethod('unmap',GPUBuffer.prototype.unmap),GPUBuffer.prototype.destroy=this._wrapMethod('destroy',GPUBuffer.prototype.destroy),GPUTexture.prototype.createView=this._wrapMethod('createView',GPUTexture.prototype.createView),GPUTexture.prototype.destroy=this._wrapMethod('destroy',GPUTexture.prototype.destroy),GPUShaderModule.prototype.getCompilationInfo=this._wrapMethod('getCompilationInfo',GPUShaderModule.prototype.getCompilationInfo),GPUComputePipeline.prototype.getBindGroupLayout=this._wrapMethod('getBindGroupLayout',GPUComputePipeline.prototype.getBindGroupLayout),GPURenderPipeline.prototype.getBindGroupLayout=this._wrapMethod('getBindGroupLayout',GPURenderPipeline.prototype.getBindGroupLayout),GPUCommandEncoder.prototype.beginRenderPass=this._wrapMethod('beginRenderPass',GPUCommandEncoder.prototype.beginRenderPass),GPUCommandEncoder.prototype.beginComputePass=this._wrapMethod('beginComputePass',GPUCommandEncoder.prototype.beginComputePass),GPUCommandEncoder.prototype.copyBufferToBuffer=this._wrapMethod('copyBufferToBuffer',GPUCommandEncoder.prototype.copyBufferToBuffer),GPUCommandEncoder.prototype.copyBufferToTexture=this._wrapMethod('copyBufferToTexture',GPUCommandEncoder.prototype.copyBufferToTexture),GPUCommandEncoder.prototype.copyTextureToBuffer=this._wrapMethod('copyTextureToBuffer',GPUCommandEncoder.prototype.copyTextureToBuffer),GPUCommandEncoder.prototype.copyTextureToTexture=this._wrapMethod('copyTextureToTexture',GPUCommandEncoder.prototype.copyTextureToTexture),GPUCommandEncoder.prototype.clearBuffer=this._wrapMethod('clearBuffer',GPUCommandEncoder.prototype.clearBuffer),GPUCommandEncoder.prototype.resolveQuerySet=this._wrapMethod('resolveQuerySet',GPUCommandEncoder.prototype.resolveQuerySet),GPUCommandEncoder.prototype.finish=this._wrapMethod('finish',GPUCommandEncoder.prototype.finish),GPUCommandEncoder.prototype.pushDebugGroup=this._wrapMethod('pushDebugGroup',GPUCommandEncoder.prototype.pushDebugGroup),GPUCommandEncoder.prototype.popDebugGroup=this._wrapMethod('popDebugGroup',GPUCommandEncoder.prototype.popDebugGroup),GPUCommandEncoder.prototype.insertDebugMarker=this._wrapMethod('insertDebugMarker',GPUCommandEncoder.prototype.insertDebugMarker),GPUComputePassEncoder.prototype.setPipeline=this._wrapMethod('setPipeline',GPUComputePassEncoder.prototype.setPipeline),GPUComputePassEncoder.prototype.dispatchWorkgroups=this._wrapMethod('dispatchWorkgroups',GPUComputePassEncoder.prototype.dispatchWorkgroups),GPUComputePassEncoder.prototype.dispatchWorkgroupsIndirect=this._wrapMethod('dispatchWorkgroupsIndirect',GPUComputePassEncoder.prototype.dispatchWorkgroupsIndirect),GPUComputePassEncoder.prototype.end=this._wrapMethod('end',GPUComputePassEncoder.prototype.end),GPUComputePassEncoder.prototype.setBindGroup=this._wrapMethod('setBindGroup',GPUComputePassEncoder.prototype.setBindGroup),GPUComputePassEncoder.prototype.setBindGroup=this._wrapMethod('setBindGroup',GPUComputePassEncoder.prototype.setBindGroup),GPUComputePassEncoder.prototype.pushDebugGroup=this._wrapMethod('pushDebugGroup',GPUComputePassEncoder.prototype.pushDebugGroup),GPUComputePassEncoder.prototype.popDebugGroup=this._wrapMethod('popDebugGroup',GPUComputePassEncoder.prototype.popDebugGroup),GPUComputePassEncoder.prototype.insertDebugMarker=this._wrapMethod('insertDebugMarker',GPUComputePassEncoder.prototype.insertDebugMarker),GPURenderPassEncoder.prototype.setViewport=this._wrapMethod('setViewport',GPURenderPassEncoder.prototype.setViewport),GPURenderPassEncoder.prototype.setScissorRect=this._wrapMethod('setScissorRect',GPURenderPassEncoder.prototype.setScissorRect),GPURenderPassEncoder.prototype.setBlendConstant=this._wrapMethod('setBlendConstant',GPURenderPassEncoder.prototype.setBlendConstant),GPURenderPassEncoder.prototype.setStencilReference=this._wrapMethod('setStencilReference',GPURenderPassEncoder.prototype.setStencilReference),GPURenderPassEncoder.prototype.beginOcclusionQuery=this._wrapMethod('beginOcclusionQuery',GPURenderPassEncoder.prototype.beginOcclusionQuery),GPURenderPassEncoder.prototype.endOcclusionQuery=this._wrapMethod('endOcclusionQuery',GPURenderPassEncoder.prototype.endOcclusionQuery),GPURenderPassEncoder.prototype.executeBundles=this._wrapMethod('executeBundles',GPURenderPassEncoder.prototype.executeBundles),GPURenderPassEncoder.prototype.end=this._wrapMethod('end',GPURenderPassEncoder.prototype.end),GPURenderPassEncoder.prototype.setPipeline=this._wrapMethod('setPipeline',GPURenderPassEncoder.prototype.setPipeline),GPURenderPassEncoder.prototype.setIndexBuffer=this._wrapMethod('setIndexBuffer',GPURenderPassEncoder.prototype.setIndexBuffer),GPURenderPassEncoder.prototype.setVertexBuffer=this._wrapMethod('setVertexBuffer',GPURenderPassEncoder.prototype.setVertexBuffer),GPURenderPassEncoder.prototype.draw=this._wrapMethod('draw',GPURenderPassEncoder.prototype.draw),GPURenderPassEncoder.prototype.drawIndexed=this._wrapMethod('drawIndexed',GPURenderPassEncoder.prototype.drawIndexed),GPURenderPassEncoder.prototype.drawIndirect=this._wrapMethod('drawIndirect',GPURenderPassEncoder.prototype.drawIndirect),GPURenderPassEncoder.prototype.drawIndexedIndirect=this._wrapMethod('drawIndexedIndirect',GPURenderPassEncoder.prototype.drawIndexedIndirect),GPURenderPassEncoder.prototype.setBindGroup=this._wrapMethod('setBindGroup',GPURenderPassEncoder.prototype.setBindGroup),GPURenderPassEncoder.prototype.pushDebugGroup=this._wrapMethod('pushDebugGroup',GPURenderPassEncoder.prototype.pushDebugGroup),GPURenderPassEncoder.prototype.popDebugGroup=this._wrapMethod('popDebugGroup',GPURenderPassEncoder.prototype.popDebugGroup),GPURenderPassEncoder.prototype.insertDebugMarker=this._wrapMethod('insertDebugMarker',GPURenderPassEncoder.prototype.insertDebugMarker),GPUQueue.prototype.submit=this._wrapMethod('submit',GPUQueue.prototype.submit),GPUQueue.prototype.writeBuffer=this._wrapMethod('writeBuffer',GPUQueue.prototype.writeBuffer),GPUQueue.prototype.writeTexture=this._wrapMethod('writeTexture',GPUQueue.prototype.writeTexture),GPUQueue.prototype.copyExternalImageToTexture=this._wrapMethod('copyExternalImageToTexture',GPUQueue.prototype.copyExternalImageToTexture),GPUQuerySet.prototype.destroy=this._wrapMethod('destroy',GPUQuerySet.prototype.destroy),GPUCanvasContext.prototype.configure=this._wrapMethod('configure',GPUCanvasContext.prototype.configure),GPUCanvasContext.prototype.unconfigure=this._wrapMethod('unconfigure',GPUCanvasContext.prototype.unconfigure),GPUCanvasContext.prototype.getCurrentTexture=this._wrapMethod('getCurrentTexture',GPUCanvasContext.prototype.getCurrentTexture)}_wrapMethod(e,t){const o=this;return function(){const i=this,n=[...arguments];o.onPreCall.emit(i,e,n);const c=t.call(i,...n),a=s.has(e),d=o.recordStacktraces||a?r():void 0;if(c instanceof Promise){const t=o._idGenerator.getNextId(i);o.onPromise.emit(i,e,n,t,d);const r=c,s=new Promise((s=>{r.then((r=>{o.onPromiseResolve.emit(i,e,n,t,r,d),s(r)}))}));return s}return o.onPostCall.emit(i,e,n,c,d),c}}}const n={r8unorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1},r8snorm:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1},r8uint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1},r8sint:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1},rg8unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},rg8snorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},rg8uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},rg8sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},rgba8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},'rgba8unorm-srgb':{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rgba8snorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rgba8uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rgba8sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},bgra8unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},'bgra8unorm-srgb':{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},r16uint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},r16sint:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},r16float:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1},rg16uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rg16sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rg16float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rgba16uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1},rgba16sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1},rgba16float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1},r32uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},r32sint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},r32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rg32uint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1},rg32sint:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1},rg32float:{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1},rgba32uint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1},rgba32sint:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1},rgba32float:{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!1},rgb10a2uint:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rgb10a2unorm:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},rg11b10ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},stencil8:{bytesPerBlock:1,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!1,hasStencil:!0},depth16unorm:{bytesPerBlock:2,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1},depth24plus:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1,depthOnlyFormat:'depth32float'},'depth24plus-stencil8':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,depthOnlyFormat:'depth32float'},depth32float:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!1},'depth32float-stencil8':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!1,isDepthStencil:!0,hasDepth:!0,hasStencil:!0,stencilOnlyFormat:'depth32float'},rgb9e5ufloat:{bytesPerBlock:4,blockWidth:1,blockHeight:1,isCompressed:!1},'bc1-rgba-unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'bc1-rgba-unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'bc2-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc2-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc3-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc3-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc4-r-unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'bc4-r-snorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'bc5-rg-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc5-rg-snorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc6h-rgb-ufloat':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc6h-rgb-float':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc7-rgba-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'bc7-rgba-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'etc2-rgb8unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'etc2-rgb8unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'etc2-rgb8a1unorm':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'etc2-rgb8a1unorm-srgb':{bytesPerBlock:8,blockWidth:4,blockHeight:4,isCompressed:!0},'etc2-rgba8unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'etc2-rgba8unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'eac-r11unorm':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0},'eac-r11snorm':{bytesPerBlock:8,blockWidth:1,blockHeight:1,isCompressed:!0},'eac-rg11unorm':{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0},'eac-rg11snorm':{bytesPerBlock:16,blockWidth:1,blockHeight:1,isCompressed:!0},'astc-4x4-unorm':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'astc-4x4-unorm-srgb':{bytesPerBlock:16,blockWidth:4,blockHeight:4,isCompressed:!0},'astc-5x4-unorm':{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0},'astc-5x4-unorm-srgb':{bytesPerBlock:16,blockWidth:5,blockHeight:4,isCompressed:!0},'astc-5x5-unorm':{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0},'astc-5x5-unorm-srgb':{bytesPerBlock:16,blockWidth:5,blockHeight:5,isCompressed:!0},'astc-6x5-unorm':{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0},'astc-6x5-unorm-srgb':{bytesPerBlock:16,blockWidth:6,blockHeight:5,isCompressed:!0},'astc-6x6-unorm':{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0},'astc-6x6-unorm-srgb':{bytesPerBlock:16,blockWidth:6,blockHeight:6,isCompressed:!0},'astc-8x5-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0},'astc-8x5-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:5,isCompressed:!0},'astc-8x6-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0},'astc-8x6-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:6,isCompressed:!0},'astc-8x8-unorm':{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0},'astc-8x8-unorm-srgb':{bytesPerBlock:16,blockWidth:8,blockHeight:8,isCompressed:!0},'astc-10x5-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0},'astc-10x5-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:5,isCompressed:!0},'astc-10x6-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0},'astc-10x6-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:6,isCompressed:!0},'astc-10x8-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0},'astc-10x8-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:8,isCompressed:!0},'astc-10x10-unorm':{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0},'astc-10x10-unorm-srgb':{bytesPerBlock:16,blockWidth:10,blockHeight:10,isCompressed:!0},'astc-12x10-unorm':{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0},'astc-12x10-unorm-srgb':{bytesPerBlock:16,blockWidth:12,blockHeight:10,isCompressed:!0},'astc-12x12-unorm':{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0},'astc-12x12-unorm-srgb':{bytesPerBlock:16,blockWidth:12,blockHeight:12,isCompressed:!0}};class c{constructor(e){this.device=e,this.blitShaderModule=e.createShaderModule({code:c.blitShader}),this.blitDepthShaderModule=e.createShaderModule({code:c.blitDepthShader}),this.blitPipelines={},this.blitDepthPipelines={},this.bindGroupLayouts=new Map,this.pipelineLayouts=new Map,this.pointSampler=e.createSampler({magFilter:'nearest',minFilter:'nearest'})}copyDepthTexture(e,t){const r=e.width,o=e.height,s=e.usage|GPUTextureUsage.RENDER_TARGET|GPUTextureUsage.COPY_SRC,i=[r,o,1],n=this.device.createTexture({format:t,size:i,usage:s});let c=this.blitDepthPipelines[t];c||(c=this.device.createRenderPipeline({layout:'auto',vertex:{module:this.blitDepthShaderModule,entryPoint:'vertexMain'},fragment:{module:this.blitDepthShaderModule,entryPoint:'fragmentMain',targets:[]},depthStencil:{format:t,depthWriteEnabled:!0,depthCompare:'always'},primitive:{topology:'triangle-list'}}),this.blitDepthPipelines[t]=c);const a=e.createView({aspect:'depth-only'}),d=c.getBindGroupLayout(0),p=this.device.createBindGroup({layout:d,entries:[{binding:0,resource:this.pointSampler},{binding:1,resource:a}]}),u=this.device.createCommandEncoder(),h={colorAttachments:[],depthStencilAttachment:{view:n.createView(),depthLoadOp:'clear',depthStoreOp:'store',depthClearValue:0,depthReadOnly:!1}},l=u.beginRenderPass(h);return l.setPipeline(c),l.setBindGroup(0,p),l.draw(3),l.end(),this.device.queue.submit([u.finish()]),n}blitTexture(e,t,r,o){const s='unfilterable-float';if(!this.bindGroupLayouts.has(s)){const e=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,sampler:{type:'non-filtering'}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:s}}]});this.bindGroupLayouts.set(s,e);const t=this.device.createPipelineLayout({bindGroupLayouts:[e]});this.pipelineLayouts.set(s,t)}const i=this.bindGroupLayouts.get(s),n=this.pipelineLayouts.get(s),c=`${o}#${s}`;let a=this.blitPipelines[c];a||(a=this.device.createRenderPipeline({layout:n,vertex:{module:this.blitShaderModule,entryPoint:'vertexMain'},fragment:{module:this.blitShaderModule,entryPoint:'fragmentMain',targets:[{format:o}]},primitive:{topology:'triangle-list'}}),this.blitPipelines[c]=a);const d=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.pointSampler},{binding:1,resource:e}]}),p=this.device.createCommandEncoder(),u={colorAttachments:[{view:r,loadOp:'clear',storeOp:'store'}]},h=p.beginRenderPass(u);h.setPipeline(a),h.setBindGroup(0,d),h.draw(3),h.end(),this.device.queue.submit([p.finish()])}}c.blitShader='\n  var<private> posTex = array<vec4f, 3>(\n    vec4f(-1.0, 1.0, 0.0, 0.0),\n    vec4f(3.0, 1.0, 2.0, 0.0),\n    vec4f(-1.0, -3.0, 0.0, 2.0));\n  struct VertexOutput {\n    @builtin(position) position: vec4f,\n    @location(0) uv: vec2f\n  };\n  @vertex\n  fn vertexMain(@builtin(vertex_index) vertexIndex: u32) -> VertexOutput {\n    var output: VertexOutput;\n    output.uv = posTex[vertexIndex].zw;\n    output.position = vec4f(posTex[vertexIndex].xy, 0.0, 1.0);\n    return output;;\n  }\n  @binding(0) @group(0) var texSampler: sampler;\n  @binding(1) @group(0) var texture: texture_2d<f32>;\n  @fragment\n  fn fragmentMain(input: VertexOutput) -> @location(0) vec4f {\n    return textureSample(texture, texSampler, input.uv);\n  }\n',c.blitDepthShader='\n  var<private> posTex = array<vec4f, 3>(\n    vec4f(-1.0, 1.0, 0.0, 0.0),\n    vec4f(3.0, 1.0, 2.0, 0.0),\n    vec4f(-1.0, -3.0, 0.0, 2.0));\n  struct VertexOutput {\n    @builtin(position) position: vec4f,\n    @location(0) uv: vec2f\n  };\n  @vertex\n  fn vertexMain(@builtin(vertex_index) vertexIndex: u32) -> VertexOutput {\n    var output: VertexOutput;\n    output.uv = posTex[vertexIndex].zw;\n    output.position = vec4f(posTex[vertexIndex].xy, 0.0, 1.0);\n    return output;;\n  }\n  @binding(0) @group(0) var texSampler: sampler;\n  @binding(1) @group(0) var texture: texture_depth_2d;\n  @fragment\n  fn fragmentMain(input: VertexOutput) -> @builtin(frag_depth) f32 {\n    return textureSample(texture, texSampler, input.uv);\n  }\n',(()=>{const t='WEBGPU_INSPECTOR_CAPTURE_FRAME';class r{constructor(){if(this._frameCommands=[],this._frameData=[],this._frameRenderPassCount=0,this._captureTextureViews=[],this._lastCommandEncoder=null,this._captureCommandEncoder=null,this._captureTexturedBuffers=[],this._currentFrame=null,this._frameIndex=0,this._initalized=!0,this._objectID=1,this._nonTrackingID=.5,this._frameStartTime=-1,this._timeSinceLastFrame=0,this._frameCommandCount=0,this._captureRequest=!1,this.__skipRecord=!1,this._trackedObjects=new Map,this._trackedObjectInfo=new Map,this._bindGroupCount=0,this._captureTextureRequest=new Map,this._toDestroy=[],!window.navigator.gpu)return;this._gpuWrapper=new i(this);const e=this;this._gpuWrapper.onPromiseResolve.addListener(this._onAsyncResolve,this),this._gpuWrapper.onPreCall.addListener(this._preMethodCall,this),this._gpuWrapper.onPostCall.addListener(this._onMethodCall,this),this._garbageCollectectedObjects=[],this._garbageCollectionRegistry=new FinalizationRegistry((t=>{if(t>0){e._garbageCollectectedObjects.push(t);const r=e._trackedObjectInfo.get(t),o=e._trackedObjects.get(t)?.deref();r&&(r===GPUBindGroup&&e._bindGroupCount--,r!==GPUBuffer&&o!==GPUTexture&&o!==GPUDevice||e._memoryLeakWarning(t)),e._garbageCollectectedObjects.length>100&&(window.postMessage({action:'inspect_delete_objects',idList:e._garbageCollectectedObjects},'*'),e._garbageCollectectedObjects.length=0)}e._trackedObjects.delete(t),e._trackedObjectInfo.delete(t),e._captureTextureRequest.delete(t)}));setInterval((()=>{e._garbageCollectectedObjects.length>0&&(window.postMessage({action:'inspect_delete_objects',idList:e._garbageCollectectedObjects},'*'),e._garbageCollectectedObjects.length=0)}),200),this._wrapCanvases();const t=document.createElement;document.createElement=r=>{const o=t.call(document,r);return'canvas'===r&&e._wrapCanvas(o),o};const r=window.requestAnimationFrame;window.requestAnimationFrame=t=>{r((function(){e._frameStart(),t(performance.now()),e._frameEnd()}))},window.addEventListener('message',(t=>{if(t.source!==window)return;const r=t.data;if('object'==typeof r&&null!==r&&'inspect_request_texture'===r.action){const t=r.id;e._requestTexture(t)}}))}_preMethodCall(e,t,r){const o=this;if('createTexture'===t&&(r[0].usage|=GPUTextureUsage.COPY_SRC),'createShaderModule'!==t&&'createRenderPipeline'!==t&&'createComputePipeline'!==t&&'createBindGroup'!==t||(this.__skipRecord=!0,e.pushErrorScope('validation'),this.__skipRecord=!1),this._capturedRenderView=null,'beginRenderPass'===t){this.__skipRecord=!0,e.__device.pushErrorScope('validation'),this.__skipRecord=!1;const t=r[0].colorAttachments;if(t)for(let e=0;e<t.length;++e){const r=t[e];if(r.view){const e=r.view.__texture;if(e&&e.__isCanvasTexture){const t=e.__context;if(t){if(t.__captureTexture&&(t.__captureTexture?.width==e.width&&t.__captureTexture?.height==e.height&&t.__captureTexture?.format==e.format||(this.__skipRecord=!0,t.__captureTexture.destroy(),t.__captureTexture=null,t.__canvas.__captureTexture=null,this.__skipRecord=!1)),!t.__captureTexture){const r=t.__device;if(r){this.__skipRecord=!0;const o=r.createTexture({size:[e.width,e.height,1],format:e.format,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC});t.__captureTexture=o,o.__id=e.__id,o.__view=t.__captureTexture.createView(),o.__view.__texture=o,o.__canvasTexture=e,e.__captureTexture=o,e.__canvas.__captureTexture=o,this.__skipRecord=!1}}t.__captureTexture&&(t.__captureTexture.__canvasTexture=e,r.view=t.__captureTexture.__view,this._capturedRenderView=r.view)}}}}}if(e===this._lastCommandEncoder&&'finish'===t&&this._captureTextureRequest.size>0&&this._captureTextureBuffers(),e instanceof GPUCanvasContext&&'configure'===t){const t=r[0];t.usage?t.usage|=GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC:t.usage=GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC,e.__device=t.device}'submit'===t&&(this.__skipRecord=!0,e.onSubmittedWorkDone().then((()=>{o._sendCaptureTextureBuffers();for(const e of this._toDestroy)e.destroy();o._toDestroy.length=0})),this.__skipRecord=!1)}_onMethodCall(e,t,r,s,i){if(this._frameCommandCount++,'beginRenderPass'===t&&(s.__commandEncoder=e,this._capturedRenderView&&(s.__capturedRenderView=this._capturedRenderView)),'createShaderModule'!==t&&'createRenderPipeline'!==t&&'createComputePipeline'!==t&&'createBindGroup'!==t||(this.__skipRecord=!0,e.popErrorScope().then((e=>{if(e){const t=s?.__id??0;window.postMessage({action:'inspect_validation_error',id:t,message:e.message,stacktrace:i},'*')}})),this.__skipRecord=!1),'end'===t&&(this.__skipRecord=!0,e.__commandEncoder.__device.popErrorScope().then((e=>{e&&window.postMessage({action:'inspect_validation_error',message:e.message,stacktrace:i},'*')})),this.__skipRecord=!1,e.__capturedRenderView)){const t=e.__capturedRenderView.__texture;if(t){const r=e.__commandEncoder;r&&(this.__skipRecord=!0,r.copyTextureToTexture({texture:t},{texture:t.__canvasTexture},[t.width,t.height,1]),this.__skipRecord=!1)}}if(this.__skipRecord)return s;let n;'getCurrentTexture'===t&&s?n=-(e.__canvas?.__id??1):'createView'===t&&e.__isCanvasTexture&&(n=e.__id-.5),e instanceof GPUDevice&&void 0===e?.__id&&this._wrapDevice(null,e),s&&(o.has(s.constructor)&&this._wrapObject(s,n),'createTexture'===t?this._trackObject(s.__id,s):'createView'!==t||n?'createBuffer'===t?this._trackObject(s.__id,s):'getCurrentTexture'===t?(s.__isCanvasTexture=!0,s.__context=e,this._trackObject(s.__id,s),e.__canvas&&(s.__canvas=e.__canvas)):'createBindGroup'===t&&this._trackObject(s.__id,s):(this._trackObject(s.__id,s),s.__texture=e)),this._recordCommand(e,t,s,r,i)}_onAsyncResolve(e,t,r,o,s,i){if('requestAdapter'===t){s&&this._wrapAdapter(s,o,i)}else if('requestDevice'===t){const t=e,n=s;n&&this._wrapDevice(t,n,o,r,i)}}_wrapAdapter(e,t,r){this._wrapObject(e,t),t??=e.__id;const o=this;e.requestAdapterInfo().then((s=>{const i={vendor:s.vendor,architecture:s.architecture,device:s.device,description:s.description,features:o._gpuToArray(e.features),limits:o._gpuToObject(e.limits),isFallbackAdapter:e.isFallbackAdapter,wgslFeatures:o._gpuToArray(navigator.gpu.wgslLanguageFeatures)};o._sendAddObjectMessage(t,0,'Adapter',JSON.stringify(i),r)}))}_wrapDevice(e,t,r,o,s){if(e&&void 0===e.__id&&this._wrapAdapter(e,void 0,s),t&&void 0===t.__id){o??=[],this._wrapObject(t,r);const i=o[0]??{},n=t.__id,c=e?.__id??0;i.features=this._gpuToArray(t.features),i.limits=this._gpuToObject(t.limits),this._trackObject(n,t),this._sendAddObjectMessage(r,c,'Device',JSON.stringify(i),s)}}clear(){this._frameCommands.length=0,this._currentFrame=null}getNextId(e){return e instanceof GPUCommandEncoder||e instanceof GPUComputePassEncoder||e instanceof GPURenderPassEncoder||e instanceof GPUCommandBuffer?0:this._objectID++}_memoryLeakWarning(e){const t=e.label??'',r=e.constructor.name,o=e.__id,s=`WebGPU ${r} ${o} ${t} was garbage collected without being explicitly destroyed. This is a memory leak.`;window.postMessage({action:'inspect_memory_leak_warning',id:o,message:s},'*')}_requestTexture(e){if(e<0){const t=-e,r=this._trackedObjects.get(t).deref();if(r&&r.__captureTexture)return void this._captureTextureRequest.set(e,r.__captureTexture)}const t=this._trackedObjects.get(e).deref();t&&t instanceof GPUTexture&&this._captureTextureRequest.set(e,t)}_frameStart(){window.postMessage({action:'inspect_begin_frame'},'*');sessionStorage.getItem(t)&&(sessionStorage.removeItem(t),this._captureRequest=!0,this._gpuWrapper.recordStacktraces=!0),this._frameData.length=0,this._frameCommands.length=0,this._frameRenderPassCount=0,this._frameIndex++,this._frameCommandCount=0}_frameEnd(){if(window.postMessage({action:'inspect_end_frame',commandCount:this._frameCommandCount},'*'),this._frameCommands.length){const e=2e3,t=Math.ceil(this._frameCommands.length/e);window.postMessage({action:'inspect_capture_frame_results',frame:this._frameIndex,count:this._frameCommands.length,batches:t},'*');for(let t=0;t<this._frameCommands.length;t+=e){const r=Math.min(e,this._frameCommands.length-t),o=this._frameCommands.slice(t,t+r);window.postMessage({action:'inspect_capture_frame_commands',frame:this._frameIndex,commands:o,index:t,count:r},'*')}this._frameCommands.length=0,this._captureRequest=!1,this._gpuWrapper.recordStacktraces=!1}}_trackObject(e,t){this._trackedObjects.set(e,new WeakRef(t)),this._trackedObjectInfo.set(e,t.constructor)}_wrapCanvas(e){if(e.__id)return;e.__id=this.getNextId(e),this._trackObject(e.__id,e);const t=this,r=e.getContext;e.getContext=(o,s)=>{const i=r.call(e,o,s);return'webgpu'===o&&i&&(t._wrapObject(i),i.__canvas=e),i}}_wrapCanvases(){const e=document.getElementsByTagName('canvas');for(let t=0;t<e.length;++t){const r=e[t];this._wrapCanvas(r)}}_objectHasMethods(e){for(const t in e)if('function'==typeof e[t]&&-1==r._skipMethods.indexOf(t))return!0;return!1}_wrapObject(e,t){e.__id||(e.__id=t??this.getNextId(e),this._garbageCollectionRegistry.register(e,e.__id),e instanceof GPUDevice&&void 0===e.queue.__id&&this._wrapObject(e.queue))}_captureTextureBuffers(){const e=this;this._captureTextureRequest.forEach((t=>{e._captureTexture(e._lastCommandEncoder,t)})),this._captureTextureRequest.clear()}_gpuToArray(e){const t=[];if(e)for(const r of e)t.push(r);return t}_gpuToObject(e){const t={};if(e)for(const r in e)t[r]=e[r];return t}_prepareDescriptor(e){if(!e||e.constructor===Number||e.constructor===String||e.constructor===Boolean)return e;if(e.buffer===ArrayBuffer||e instanceof ArrayBuffer)return e;if(e instanceof Array){const t=[];for(const r of e)t.push(this._prepareDescriptor(r));return t}if(void 0!==e.__id)return{__id:e.__id,__class:e.constructor.name};const t={};for(const r in e)t[r]=this._prepareDescriptor(e[r]);return t}_stringifyDescriptor(e){const t=this._prepareDescriptor(e)??{};return JSON.stringify(t)}_sendAddObjectMessage(e,t,r,o,s,i){window.postMessage({action:'inspect_add_object',id:e,parent:t,type:r,descriptor:o,stacktrace:s,pending:i},'*')}_recordCommand(e,t,r,o,s){const i=e?.__id??0;if('destroy'===t){const t=e.__id;this._trackedObjects.delete(t),this._trackedObjectInfo.delete(t),e instanceof GPUBindGroup&&this._bindGroupCount--,t>=0&&(this._captureTextureRequest.delete(t),window.postMessage({action:'inspect_delete_object',id:t},'*'))}else if('createShaderModule'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'ShaderModule',this._stringifyDescriptor(o[0]),s)}else if('createBuffer'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'Buffer',this._stringifyDescriptor(o[0]),s)}else if('createTexture'===t){const t=r.__id;this._sendAddObjectMessage(t,i,'Texture',this._stringifyDescriptor(o[0]),s),r.__device=e}else if('getCurrentTexture'===t){const e=r.__id;if(r){const t={size:[r.width,r.height,r.depthOrArrayLayers],mipLevelCount:r.mipLevelCount,sampleCount:r.sampleCount,dimension:r.dimension,format:r.format,usage:r.usage},o=JSON.stringify(t);this._sendAddObjectMessage(e,i,'Texture',o,s)}}else if('createView'===t){const t=r.__id;r.__texture=e,this._sendAddObjectMessage(t,i,'TextureView',this._stringifyDescriptor(o[0]),s)}else if('createSampler'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'Sampler',this._stringifyDescriptor(o[0]),s)}else if('createBindGroup'===t){this._bindGroupCount++;const e=r.__id;this._sendAddObjectMessage(e,i,'BindGroup',this._stringifyDescriptor(o[0]),s)}else if('createBindGroupLayout'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'BindGroupLayout',this._stringifyDescriptor(o[0]),s)}else if('createPipelineLayout'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'PipelineLayout',this._stringifyDescriptor(o[0]),s)}else if('createRenderPipeline'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'RenderPipeline',this._stringifyDescriptor(o[0]),s),o[0].vertex?.module&&(r.__vertexModule=o[0].vertex?.module),o[0].fragment?.module&&(r.__fragmentModule=o[0].fragment?.module)}else if('createComputePipeline'===t){const e=r.__id;this._sendAddObjectMessage(e,i,'ComputePipeline',this._stringifyDescriptor(o[0]),s),o[0].compute?.module&&(r.__computeModule=o[0].compute?.module)}else'createCommandEncoder'===t?(r.__device=e,this._lastCommandEncoder=r):'finish'===t?e==this._lastCommandEncoder&&(this._lastCommandEncoder=null):'beginRenderPass'===t&&this._frameRenderPassCount++;this._captureRequest&&this._captureCommand(e,t,o,s)}_captureCommand(e,t,r,o){const s=r;1===s.length&&void 0===s[0]&&(s.length=0);let i=null;if('setBindGroup'===t){i=[];const e=s[0],t=s[1];if(i.push(e),i.push(t),s.length>2){const e=s[2],t=s[3]??0,r=s[4];if(0!==r){const o=e instanceof ArrayBuffer?e:e.buffer;o?r>0?i.push(new Uint32Array(o,t,r)):t>0?i.push(new Uint32Array(o,t)):i.push(e):i.push(e)}}}else if('writeBuffer'===t){i=[];const e=s[0],t=s[1];i.push(e),i.push(t);let r=s[2];if(s.length>3){const e=s[3]??0,t=s[4],o=r instanceof ArrayBuffer?r:r.buffer;o&&(t>0?r=new Uint8Array(o,e,t):e>0&&(r=new Uint8Array(o,e)))}i.push(r)}else i=s;i=this._processCommandArgs(i);const n=this._frameCommands.length;if(this._frameCommands.push({class:e.constructor.name,id:e.__id,commandId:n,method:t,args:i,stacktrace:o}),'beginRenderPass'===t){if(r[0]?.colorAttachments?.length>0){for(const e of r[0].colorAttachments){const t=e.resolveTarget??e.view;this._captureTextureViews.push(t)}this._captureCommandEncoder=e}}else if('end'===t){if(this._captureTextureViews.length>0){for(const e of this._captureTextureViews){const t=e.__texture;t&&this._captureTexture(this._captureCommandEncoder,t,this._frameRenderPassCount-1)}this._captureTextureViews.length=0}this._captureCommandEncoder=null}}_sendCaptureTextureBuffers(){this._captureTexturedBuffers.length>0&&window.postMessage({action:'inspect_capture_texture_frames',count:this._captureTexturedBuffers.length},'*');for(const e of this._captureTexturedBuffers){const{id:t,buffer:r,width:o,height:s,depthOrArrayLayers:i,format:n,passId:c}=e,a=this;r.mapAsync(GPUMapMode.READ).then((()=>{const e=r.getMappedRange(),d=new Uint8Array(e);a._sendTextureData(t,o,s,i,n,c,d),r.destroy()}))}this._captureTexturedBuffers.length=0}_sendTextureData(t,r,o,s,i,n,c){const a=1048576,d=c.length,p=Math.ceil(d/a);for(let r=0;r<p;++r){const o=r*a,s=Math.min(a,d-o);e(c.slice(o,o+s)).then((e=>{window.postMessage({action:'inspect_capture_texture_data',id:t,passId:n,offset:o,size:d,index:r,count:p,chunk:e},'*')}))}}_getTextureUtils(e){return e?(e.__textureUtils||(e.__textureUtils=new c(e)),e.__textureUtils):null}_captureTexture(e,t,r){const o=e.__device;if(!o)return;r??=-1;const s=t.__id;let i=t.format,c=i?n[i]:void 0;if(!c)return;if('depth24plus'===i||'depth24plus-stencil8'===i){this.__skipRecord=!0;try{t=this._getTextureUtils(t.__device).copyDepthTexture(t,'depth24plus-stencil8'===i?'depth32float':'depth32float-stencil8')}catch(e){return this.__skipRecord=!1,void console.log(e)}this.__skipRecord=!1,i=t.format,c=i?n[i]:void 0,t.__id=s,this._toDestroy.push(t)}const a=t.width,d=t.height||1,p=t.depthOrArrayLayers||1,u=a*c.bytesPerBlock+255&-256,h=u*d*p;if(!h)return;const l={width:a,height:d,depthOrArrayLayers:p};let _=null;try{this.__skipRecord=!0,_=o.createBuffer({size:h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});const r='depth24plus-stencil8'===i||'depth32float-stencil8'===i?'depth-only':'all';e.copyTextureToBuffer({texture:t,aspect:r},{buffer:_,bytesPerRow:u,rowsPerImage:d},l)}catch(e){console.log(e)}this.__skipRecord=!1,_&&this._captureTexturedBuffers.push({id:s,buffer:_,width:a,height:d,depthOrArrayLayers:p,format:i,passId:r})}_addCommandData(e){if(this._captureRequest){const t=this._frameData.length;return this._frameData.push(e),t}return-1}_processCommandArgs(e){if(!e||e.constructor===Number||e.constructor===String||e.constructor===Boolean)return e;if(void 0!==e.__id)return{__id:e.__id,__class:e.constructor.name};if(e instanceof ImageBitmap||e instanceof ImageData||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement||e instanceof HTMLVideoElement||e instanceof OffscreenCanvas||e instanceof VideoFrame)return`@-1 ${e.constructor.name} ${e.width} ${e.height}`;if(e instanceof Array||void 0!==e.buffer){const t=100;if(e.length>t){return`@${this._addCommandData(e)} ${e.constructor.name} ${e.byteLength}`}const r=[];for(const t in e)r[t]=this._processCommandArgs(e[t]);return r}if(e instanceof ArrayBuffer){return`@${this._addCommandData(e)} ${e.constructor.name} ${e.byteLength}`}if(e instanceof Object){const t={};for(const r in e)t[r]=this._processCommandArgs(e[r]);return t}return e}}r._asyncMethods=['requestAdapter','requestDevice','createComputePipelineAsync','createRenderPipelineAsync'],r._skipMethods=['toString','entries','getContext','forEach','has','keys','values','getPreferredFormat','pushErrorScope','popErrorScope'],new r})()}();
//# sourceMappingURL=webgpu_inspector.js.map
