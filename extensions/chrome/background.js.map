{"version":3,"file":"background.js","sources":["../../src/extension/background.js"],"sourcesContent":["const connections = new Map();\r\n\r\nchrome.runtime.onConnect.addListener((port) => {\r\n  port.onMessage.addListener((message, port) => {\r\n    const tabId = message.tabId !== undefined ? message.tabId : port.sender.tab.id;\r\n    if (!connections.has(tabId)) {\r\n      connections.set(tabId, new Map());\r\n    }\r\n\r\n    const portMap = connections.get(tabId);\r\n\r\n    // Can be multiple content scripts per tab\r\n    // for example if a web page includes iframe.\r\n    // So manage ports as an array.\r\n    if (!portMap.has(port.name)) {\r\n      portMap.set(port.name, []);\r\n    }\r\n\r\n    const ports = portMap.get(port.name);\r\n    if (!ports.includes(port)) {\r\n      ports.push(port);\r\n\r\n      port.onDisconnect.addListener(() => {\r\n        if (ports.includes(port)) {\r\n          ports.splice(ports.indexOf(port), 1);\r\n        }\r\n        if (ports.length === 0) {\r\n          portMap.delete(port.name);\r\n        }\r\n        if (portMap.size === 0) {\r\n          connections.delete(tabId);\r\n        }\r\n      });\r\n    }\r\n\r\n    const postMessageToPorts = (ports, message) => {\r\n      ports.forEach((port) => {\r\n        port.postMessage(message);\r\n      });\r\n    };\r\n\r\n    // transfer message between panel and contentScripts of the same tab\r\n    if (port.name === \"webgpu-inspector-panel\" && portMap.has(\"webgpu-inspector-page\")) {\r\n      postMessageToPorts(portMap.get(\"webgpu-inspector-page\"), message);\r\n    }\r\n\r\n    if (port.name === \"webgpu-inspector-page\" && portMap.has(\"webgpu-inspector-panel\")) {\r\n      postMessageToPorts(portMap.get(\"webgpu-inspector-panel\"), message);\r\n    }\r\n  });\r\n});\r\n"],"names":["connections","Map","chrome","runtime","onConnect","addListener","port","onMessage","message","tabId","undefined","sender","tab","id","has","set","portMap","get","name","ports","includes","push","onDisconnect","splice","indexOf","length","delete","size","postMessageToPorts","forEach","postMessage"],"mappings":"MAAA,MAAMA,EAAc,IAAIC,IAExBC,OAAOC,QAAQC,UAAUC,aAAaC,IACpCA,EAAKC,UAAUF,aAAY,CAACG,EAASF,KACnC,MAAMG,OAA0BC,IAAlBF,EAAQC,MAAsBD,EAAQC,MAAQH,EAAKK,OAAOC,IAAIC,GACvEb,EAAYc,IAAIL,IACnBT,EAAYe,IAAIN,EAAO,IAAIR,KAG7B,MAAMe,EAAUhB,EAAYiB,IAAIR,GAK3BO,EAAQF,IAAIR,EAAKY,OACpBF,EAAQD,IAAIT,EAAKY,KAAM,IAGzB,MAAMC,EAAQH,EAAQC,IAAIX,EAAKY,MAC1BC,EAAMC,SAASd,KAClBa,EAAME,KAAKf,GAEXA,EAAKgB,aAAajB,aAAY,KACxBc,EAAMC,SAASd,IACjBa,EAAMI,OAAOJ,EAAMK,QAAQlB,GAAO,GAEf,IAAjBa,EAAMM,QACRT,EAAQU,OAAOpB,EAAKY,MAED,IAAjBF,EAAQW,MACV3B,EAAY0B,OAAOjB,EACpB,KAIL,MAAMmB,EAAqB,CAACT,EAAOX,KACjCW,EAAMU,SAASvB,IACbA,EAAKwB,YAAYtB,EAAQ,GACzB,EAIc,2BAAdF,EAAKY,MAAqCF,EAAQF,IAAI,0BACxDc,EAAmBZ,EAAQC,IAAI,yBAA0BT,GAGzC,0BAAdF,EAAKY,MAAoCF,EAAQF,IAAI,2BACvDc,EAAmBZ,EAAQC,IAAI,0BAA2BT,EAC3D,GACD"}